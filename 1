Sub CreateISINList()
    Dim twDataSheet As Worksheet
    Dim isinListSheet As Worksheet
    Dim twDataTable As ListObject
    Dim isinListTable As ListObject
    Dim twDataRow As ListRow
    Dim purchaseISINs As New Collection
    Dim salesISINs As New Collection
    Dim isinValue As String
    Dim transactionType As String
    Dim i As Long
    
    On Error Resume Next  ' For handling duplicate ISINs in the collection
    
    ' Set the worksheets
    Set twDataSheet = ThisWorkbook.Worksheets("TW_Data")
    Set isinListSheet = ThisWorkbook.Worksheets("ISIN List")
    
    ' Set the tables
    Set twDataTable = twDataSheet.ListObjects("TW_Data")
    Set isinListTable = isinListSheet.ListObjects("isin_list")
    
    ' Clear existing data in the isin_list table
    If isinListTable.DataBodyRange Is Nothing Then
        ' Do nothing if the table is empty
    Else
        isinListTable.DataBodyRange.Delete
    End If
    
    ' Loop through the TW_Data table
    For Each twDataRow In twDataTable.ListRows
        isinValue = Trim(twDataRow.Range(1, 7).Value)  ' Column7
        transactionType = UCase(Trim(twDataRow.Range(1, 12).Value))  ' Column12
        
        If isinValue <> "" Then
            If transactionType = "BUY" Then
                ' Add to Purchases collection
                purchaseISINs.Add isinValue, isinValue  ' Key is the ISIN value to avoid duplicates
            ElseIf transactionType = "SELL" Then
                ' Add to Sales collection
                salesISINs.Add isinValue, isinValue  ' Key is the ISIN value to avoid duplicates
            End If
        End If
    Next twDataRow
    
    ' Add ISINs to the isin_list table
    Dim maxRows As Long
    maxRows = Application.WorksheetFunction.Max(purchaseISINs.Count, salesISINs.Count)
    
    If maxRows > 0 Then
        ' Resize the table to fit the new data
        isinListTable.Resize isinListTable.Range.Resize(maxRows + 1)
    End If
    
    ' Populate Purchases column
    i = 1
    For Each isinValue In purchaseISINs
        isinListTable.DataBodyRange(i, isinListTable.ListColumns("Purchases").Index).Value = isinValue
        i = i + 1
    Next isinValue
    
    ' Populate Sales column
    i = 1
    For Each isinValue In salesISINs
        isinListTable.DataBodyRange(i, isinListTable.ListColumns("Sales").Index).Value = isinValue
        i = i + 1
    Next isinValue
    
    MsgBox "ISIN List has been created successfully!", vbInformation
End Sub
